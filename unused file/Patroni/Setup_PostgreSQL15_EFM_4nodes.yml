---
- name: Setup PostgreSQL 15 EFM With 4 Nodes
  hosts: "{{ host_name }}"
  gather_facts: false  # Disable gathering facts to speed up the test
  become: yes
  become_user: root
  become_method: sudo 

  tasks:
    - name: Set cleaned variable name
      set_fact:
        # Variable for Common EFM
        cleaned_ip_address: "{{ ip_address | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_port_efm: "{{ port_efm | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_postgresql_service: "{{ postgresql_service | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_efm_service: "{{ efm_service | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_efm_cluster: "{{ efm_cluster | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_postgresql_config: "{{ postgresql_config | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        
        # Variable for Nodes File EFM
        cleaned_nodes_file_efm: "{{ nodes_file_efm | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_ip_node1: "{{ ip_node1 | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_ip_node2: "{{ ip_node2 | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_ip_node_dr_1: "{{ ip_node_dr_1 | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
		    cleaned_ip_node_dr_2: "{{ ip_node_dr_2 | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        
        # Variable for Properties File EFM
        cleaned_properties_file_efm: "{{ properties_file_efm | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_user: "{{ db_user | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_password_encrypted: "{{ db_password_encrypted | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_port: "{{ db_port | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_name: "{{ db_name | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_promotable: "{{ promotable | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_service_owner: "{{ db_service_owner | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_bin: "{{ db_bin | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_db_data_dir: "{{ db_data_dir | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_auto_allow_hosts: "{{ auto_allow_hosts | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_stable_nodes_file: "{{ stable_nodes_file | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_auto_resume_period: "{{ auto_resume_period | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"      
        cleaned_admin_port: "{{ admin_port | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_user_email: "{{ user_email  | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_virtual_ip: "{{ virtual_ip | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_virtual_ip_interface: "{{ virtual_ip_interface | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_virtual_ip_prefix: "{{ virtual_ip_prefix | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_virtual_ip_single: "{{ virtual_ip_single | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_is_witness: "{{ is_witness | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_efm_loglevel: "{{ efm_loglevel | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_update_physical_slots_period: "{{ update_physical_slots_period | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        
        # Variable for PostgreSQL Config 
        cleaned_max_connections: "{{ max_connections | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_shared_buffers: "{{ shared_buffers | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_huge_pages: "{{ huge_pages | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_work_mem: "{{ work_mem | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_archive_mode: "{{ archive_mode | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_archive_command: "{{ archive_command | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_checkpoint_completion_target: "{{ checkpoint_completion_target | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_patroni_cluster_name: "{{ patroni_cluster_name | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_default_statistics_target: "{{ default_statistics_target | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_effective_cache_size: "{{ effective_cache_size | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_effective_io_concurrency: "{{ effective_io_concurrency | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_hot_standby: "{{ hot_standby | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_idle_session_timeout: "{{ idle_session_timeout | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_locks_per_transaction: "{{ max_locks_per_transaction | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_parallel_maintenance_workers  : "{{ max_parallel_maintenance_workers | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_parallel_workers: "{{ max_parallel_workers | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_parallel_workers_per_gather: "{{ max_parallel_workers_per_gather | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_prepared_transactions: "{{ max_prepared_transactions | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_replication_slots: "{{ max_replication_slots | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_wal_senders: "{{ max_wal_senders | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_wal_size: "{{ max_wal_size | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_max_worker_processes  : "{{ max_worker_processes | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_min_wal_size: "{{ min_wal_size | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_password_encryption: "{{ password_encryption | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_random_page_cost: "{{ random_page_cost | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_shared_preload_libraries: "{{ shared_preload_libraries | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_track_activity_query_size: "{{ track_activity_query_size | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_track_commit_timestamp: "{{ track_commit_timestamp | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_wal_buffers: "{{ wal_buffers | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_wal_keep_size: "{{ wal_keep_size | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_wal_level: "{{ wal_level | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_wal_log_hints: "{{ wal_log_hints | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_primary_conninfo: "{{ primary_conninfo | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_primary_slot_name: "{{ primary_slot_name | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"
        cleaned_restore_command: "{{ restore_command | regex_replace('\\[|\\]', '') | replace(\"'\", '') | replace('^u', '', 1) }}"    

    - name: Create New Nodes file on EFM
      file:
        path: /etc/edb/efm-4.9/{{ cleaned_nodes_file_efm }}
        owner: "efm"
        group: "efm"
        mode: 0644
        state: touch
    
    - name: Delete all existing lines in the service file
      lineinfile:
        path: /etc/edb/efm-4.9/{{ cleaned_nodes_file_efm }}
        regexp: '.*'
        state: absent

    - name: Insert New Nodes file on EFM
      blockinfile: 
        path: /etc/edb/efm-4.9/{{ cleaned_nodes_file_efm }}
        owner: efm
        group: efm
        mode: 0644
        insertafter: EOF
        block: |
          # List of node address:port combinations separated by whitespace.
          # The list should include at least the membership coordinator's address.
          {{ cleaned_ip_node1 }}:{{ cleaned_port_efm }} {{ cleaned_ip_node2 }}:{{ cleaned_port_efm }} {{ cleaned_ip_node_dr_1 }}:{{ cleaned_port_efm }} {{ cleaned_ip_node_dr_2 }}:{{ cleaned_port_efm }}
        marker: ""

    - name: Create New Properties file on EFM
      file:
        path: /etc/edb/efm-4.9/{{ cleaned_properties_file_efm }}
        owner: "efm"
        group: "efm"
        mode: 0644
        state: touch
    
    - name: Delete all existing lines in the service file
      lineinfile:
        path: /etc/edb/efm-4.9/{{ cleaned_properties_file_efm }}
        regexp: '.*'
        state: absent

    - name: Insert New Properties file on EFM
      blockinfile: 
        path: /etc/edb/efm-4.9/{{ cleaned_properties_file_efm }}
        owner: efm
        group: efm
        mode: 0644
        insertafter: EOF
        block: |
          # Copyright EnterpriseDB Corporation, 2013-2024. All Rights Reserved.
          
          # Do not use quotes around property values in this file.
          # All user scripts specified below are run as the Failover Manager user.
          
          # The value for the password property should be the output from
          # 'efm encrypt' -- do not include a cleartext password here. To
          # prevent accidental sharing of passwords among clusters, the cluster
          # name is incorporated into the encrypted password. If you change
          # the cluster name (the name of this file), you must encrypt the
          # password again with the new name.
          # The db.port property must be the same for all nodes.
          db.user={{ cleaned_db_user }}
          db.password.encrypted={{ cleaned_db_password_encrypted }}
          db.port={{ cleaned_db_port }}
          db.database={{ cleaned_db_name }}
          
          # This property tells EFM which OS user owns the $PGDATA dir for the
          # 'db.database'.  By default, the owner is either 'postgres' for PostgreSQL
          # or 'enterprisedb' for EDB Postgres Advanced Server.  However, if you
          # have configured your db to run as a different user, you will need to
          # copy the /etc/sudoers.d/efm-XX conf file to grant the
          # necessary permissions to your db owner.
          #
          # This username must have write permission to the 'db.data.dir'
          # specified below.
          db.service.owner={{ cleaned_db_service_owner }}
          
          # Specify the proper service name in order to use service commands rather
          # than pg_ctl to start/stop/restart a database. For example, if this property
          # is set, then 'service <name> restart' or 'systemctl restart <name>'
          # (depending on OS version) will be used to restart the database rather than pg_ctl.
          # This property is required if running the database as a service.
          db.service.name={{ cleaned_postgresql_service }}
          
          # Specify the directory containing the pg_controldata/pg_ctl commands, for example:
          # /usr/edb/as15/bin. Unless the db.service.name property is used, the pg_ctl
          # command is used to start/stop/restart databases as needed after a
          # failover or switchover. This property is required.
          db.bin={{ cleaned_db_bin }}
          
          # This is the directory where a standby.signal file will exist for a standby node.
          # If a primary database fails, a recovery.conf file will be written in this
          # location to ensure that the failed database can not be restarted as the
          # primary database.
          # This corresponds to database environment variable PGDATA and should be same
          # as the output of query 'show data_directory;' on respective database.
          db.data.dir={{ cleaned_db_data_dir }}
          
          # Specify the location of database configuration files if they are
          # not contained in the same location as the standby.signal
          # file. This is most likely the case for Debian installations. The location
          # specified will be used as the -D value (the location of the data directory
          # for the cluster) when calling pg_ctl to start or stop the database.
          # If this property is blank, the db.data.dir location specified by the
          # db.data.dir property will be used.
          # This corresponds to the output of query 'show config_file;' on respective database.
          db.config.dir=
          
          # Use the jdbc.sslmode property to enable ssl for EFM connections. Setting
          # this property to anything but 'disable' will force the agents to use
          # 'ssl=true' for all JDBC database connections (to both local and remote
          # databases). Valid values are:
          #
          # disable   - Do not use ssl for connections.
          # verify-ca - EFM will perform CA verification before allowing the
          #             certificate.
          # require   - Verification will not be performed on the server certificate.
          jdbc.sslmode=disable
          
          # Email address(es) for notifications. The value of this property must
          # be the same across all agents. Multiple email addresses must
          # be separated by space. This is required if not using a 'script.notification'
          # script. Either/both can be used.
          user.email={{ cleaned_user_email }}
          
          # Use the from.email property to specify the from email address that
          # will be used for email notifications. Use the %h placeholder to
          # represent the name of the node host (e.g. example@%h). The
          # placeholder will be replaced with the name of the host as returned
          # by the hostname command.
          # Leave blank to use the default, efm@localhost.
          from.email=
          
          # Minimum severity level of notifications that will be sent by the agent.
          # The minimum level also applies to the notification script (below).
          # Valid values are INFO, WARNING, and SEVERE. A list of notifications is
          # grouped by severity in the user's guide.
          notification.level=INFO
          
          # Text to add to the beginning of every notification. This could be used to help identify
          # what the cluster is used for, the role of this node, etc. To use multiple lines, add
          # a backslash \ to the end of a line of text. To include a newline use \n.
          # Example:
          # notification.text.prefix=Development cluster for Example department.\n\
          #  Used by Dev and QA \
          #  See Example group for questions.
          notification.text.prefix=
          
          # Absolute path to script run for user notifications.
          #
          # This is an optional user-supplied script that can be used for
          # notifications instead of email. This is required if not using
          # email notifications. Either/both can be used. The script will
          # be passed two parameters: the message subject and the message body.
          script.notification=
          
          # This property specifies the ip address and port that jgroups
          # will bind to on this node. The value is of the form <ip>:<port>.
          # Note that the port specified here is used for communicating with
          # other nodes, and is not the same as the admin.port below, used
          # only to communicate with the local agent to send control signals.
          # For example, <provide_your_ip_address_here>:7800
          bind.address={{ cleaned_ip_address }}:{{ cleaned_port_efm }}
          
          # This is the ip address/hostname to be used for communication with all
          # other Failover Manager agents. All traffic towards this address should
          # be routed by the network to the bind.address of the node.
          # The value is in the ip/hostname format only. This address will be used
          # in scenarios where nodes are on different networks and broadcast an IP
          # address other than the bind.address to the external world.
          external.address=
          
          # This property controls the port binding of the administration server
          # which is used for some commands (ie cluster-status). The default
          # is 7809; you can modify this value if the port is already in use.
          admin.port={{ cleaned_admin_port }}
          
          # Specifies whether or not this is a witness node. Witness nodes
          # do not have local databases running.
          is.witness={{ cleaned_is_witness }}
          
          # These properties apply to the connection(s) EFM uses to monitor
          # the local database. Every 'local.period' seconds, a database check
          # is made in a background thread. If the main monitoring thread does
          # not see that any checks were successful in 'local.timeout' seconds,
          # then the main thread makes a final check with a timeout value
          # specified by the 'local.timeout.final' value. All values are in seconds.
          # Whether EFM uses single or multiple connections for database checks
          # is controlled by the 'db.reuse.connection.count' property.
          local.period=10
          local.timeout=60
          local.timeout.final=10
          
          # Timeout for a call to check if a remote database is responsive.
          # For example, this is how long a standby would wait for a
          # DB ping request from itself and the witness to the primary DB
          # before performing failover.
          remote.timeout=10
          
          # The total amount of time in seconds to wait before determining that
          # a node has failed or been disconnected from this node.
          #
          # The value of this property must be the same across all agents.
          node.timeout=50
          
          # Set to true to encrypt messages that are sent between agents.
          # This property must be the same on all agents or else the agents
          # will not be able to connect.
          encrypt.agent.messages=false
          
          # Whether or not the 'efm stop-cluster <cluster name>' command is enabled.
          # Set to false to disable the command, in which case all Failover
          # Manager agents must be stopped individually. Note that stopping each
          # agent separately will change the .nodes files on remaining agents
          # unless stable.nodes.file is also true. This property value must
          # be the same on all agents if set. The default is true if not set.
          enable.stop.cluster=true
          
          # Shut down the database after a primary agent detects that it has
          # been isolated from the majority of the efm cluster. If set to
          # true, efm will stop the database before running the
          # 'script.primary.isolated' script, if a script is specified.
          stop.isolated.primary=true
          
          # Attempt to shut down a failed primary database after EFM can no longer
          # connect to it. This can be used for added safety in the case a
          # failover is caused by a failure of the network on the primary node.
          # If specified, a 'script.db.failure' script is run after this attempt.
          stop.failed.primary=true
          
          # Treat a primary agent shutdown as an agent failure. This can be set to true
          # to treat a primary agent shutdown as a failure situation. Caution should be
          # used when using this feature, as it could cause an unwanted
          # promotion in the case of performing primary database maintenance.
          # Please see the user's guide for more information.
          primary.shutdown.as.failure=false
          
          # Period in seconds between having the primary agent update promotable
          # standbys with physical replication slot information so that
          # the cluster will continue to use replication slots after a failover.
          # Set to zero to turn off.
          update.physical.slots.period={{ cleaned_update_physical_slots_period }}
          
          # This is the address of a well-known server that EFM can ping in an
          # effort to determine network reachability issues.  It might be the IP
          # address of a nameserver within your corporate firewall or another server
          # that *should* always be reachable via a 'ping' command from each of the
          # EFM nodes.
          #
          # There are many reasons why this node might not be considered reachable:
          # firewalls might be blocking the request, ICMP might be filtered out,
          # etc.
          #
          # Do not use the IP address of any node in the EFM cluster (primary, standby,
          # or witness) because this ping server is meant to provide an additional
          # layer of information should the EFM nodes lose sight of each other.
          #
          # The installation default is Google's DNS server.
          ping.server.ip={{ cleaned_ip_address }}
          
          # This command will be used to test the reachability of certain nodes.
          #
          # Do not include an IP address or hostname on the end of this command - it
          # will be added dynamically at runtime with the values contained in 'virtual.ip'
          # and 'ping.server.ip'.
          #
          # Make sure this command returns reasonably quickly - test it from a shell
          # command line first to make sure it works properly.
          ping.server.command=/bin/ping -q -c3 -w5
          
          # Have the first node started automatically add the addresses from
          # its .nodes file to the allowed host list. This will make it
          # faster to start the cluster when the initial set of hosts
          # is already known.
          auto.allow.hosts={{ cleaned_auto_allow_hosts }}
          
          # When set to true, EFM will not rewrite the .nodes file whenever new nodes
          # join or leave the cluster. This can help starting a cluster in the cases
          # where it is expected for member addresses to be mostly static, and combined
          # with 'auto.allow.hosts' makes startup easier when learning Failover Manager.
          stable.nodes.file={{ cleaned_stable_nodes_file }}
          
          # This property controls how many times a database connection is reused
          # before creating a new one. If set to zero, a new connection will be
          # created every time an agent pings its local database.
          db.reuse.connection.count=0
          
          # Whether or not failover will happen automatically when the primary
          # fails. Set to false if you want to receive the failover notifications
          # but not have EFM actually perform the failover steps.
          # The value of this property must be the same across all agents.
          auto.failover=true
          
          # After a standby is promoted, Failover Manager will attempt to
          # update the remaining standbys to use the new primary. Failover
          # Manager will change the host parameter of the primary_conninfo
          # entry in postgresql.auto.conf and restart the database. The
          # restart command is contained in either the efm_db_functions or
          # efm_root_functions file; default when not running db as an os
          # service is: "pg_ctl restart -m fast -w -t <timeout> -D <directory>"
          # where the timeout is the local.timeout property value and the
          # directory is specified by db.data.dir. To turn off
          # automatic reconfiguration, set this property to false.
          auto.reconfigure=true
          
          # A standby with this set to false will not be added to the failover
          # priority list, and so will not be available for promotion. The
          # property will be used whenever an agent starts as a standby or
          # resumes as a standby after being idle. After startup/resume, the
          # node can still be added or removed from the priority list with the
          # 'efm set-priority' command. This property is required for all
          # non-witness nodes.
          promotable={{ cleaned_promotable }}
          
          # Use replay LSN value for tiebreaker when choosing a standby to promote
          # before using failover priority. Set this property to true to consider
          # replay location as more important than failover priority (as seen in
          # cluster-status command) when choosing the "most ahead" standby to promote.
          use.replay.tiebreaker=true
          
          # Time in seconds for this standby to delay restarting to follow the
          # primary after a promotion. This can be used to have standbys restart
          # at different times to increase availability. Caution should be used
          # when using this feature, as a delayed standby will not be following
          # the new primary and care must be taken that the new primary retains
          # enough WAL for the standby to follow it.
          # Please see the user's guide for more information.
          standby.restart.delay=0
          
          # During a switchover, recovery settings are copied from a standby
          # to the original primary. If the application.name property is set,
          # Failover Manager will replace the application_name portion of the
          # primary_conninfo entry with this property value before starting
          # the original primary database as a standby. If this property is
          # not set, Failover Manager will remove the parameter value
          # from primary_conninfo.
          application.name=
          
          # If the restore_command on a standby restores directly from the primary node, use this property
          # to have Failover Manager change the command when a new primary is promoted.
          #
          # Use the %h placeholder to represent the address of the new primary. During promotion
          # it will be replaced with the address of the new primary.
          #
          # If not specified, failover manager will not change the restore_command value, if any,
          # on standby nodes.
          #
          # Example:
          # restore.command=scp <db service owner>@%h:/var/lib/edb/as15/data/archive/%f %p
          restore.command=
          
          # Reduce num_sync when the number of synchronous standbys drops below the
          # value required by the primary database. If set to true, Failover Manager will
          # reduce the number of standbys needed in the primary's
          # synchronous_standby_names property and reload the primary configuration.
          # Failover Manager will not reduce the number below 1, taking the primary
          # out of synchronous replication, unless the reconfigure.sync.primary
          # property is also set to true.
          # To raise num_sync, see the reconfigure.num.sync.max property below.
          reconfigure.num.sync=false
          
          # If reconfigure.num.sync is set to true and this property is set, Failover
          # Manager will check if num_sync can be raised when a standby is added to the cluster.
          # Failover Manager will not raise the value above the maximum set here.
          # If the primary database has been taken out of synchronous mode completely (see
          # the reconfigure.sync.primary property), then Failover Manager will not
          # reconfigure the primary database if standbys are added to the cluster.
          reconfigure.num.sync.max=
          
          # Take the primary database out of synchronous replication mode when needed.
          # If set to true, Failover Manager will clear the synchronous_standby_names
          # configuration parameter on the primary if the number of synchronous
          # standbys drops below the required level for the primary to accept writes.
          # If set to false, Failover Manager will detect the situation but will only
          # send a notification if the standby count drops below the required level.
          #
          # CAUTION: TAKING THE PRIMARY DATABASE OUT OF SYNCHRONOUS MODE MEANS THERE
          # MAY ONLY BE ONE COPY OF DATA. DO NOT MAKE THIS CHANGE UNLESS YOU ARE SURE
          # THIS IS OK.
          reconfigure.sync.primary=false
          
          # Instead of setting specific standbys as being unavailable for
          # promotion, this property can be used to set a minimum number
          # of standbys that will not be promoted. Set to one, for example,
          # promotion will not happen if it will drop the number of standbys
          # below this value. This property must be the same on each node.
          minimum.standbys=0
          
          # Space-separated list of standby addresses that are high priority for
          # promotion when this node is the primary. If set, when this node is
          # promoted, addresses in this list will be added to the front of the
          # standby priority list. If this list contains addresses that are not
          # standbys at the time of promotion, they will not be added.
          priority.standbys=
          
          # Time in seconds between checks to see if a promoting database
          # is out of recovery.
          recovery.check.period=1
          
          # Time in seconds to keep trying to connect to a database after a start
          # or restart command returns successfully but the database is not
          # ready to accept connections yet (a rare occurrence). This applies to
          # standby databases that are restarted when being reconfigured for a new
          # primary, and to primary databases that are stopped and started as
          # standbys during a switchover.
          #
          # This retry mechanism is unrelated to the auto.resume.period parameter.
          restart.connection.timeout=60
          
          # Period in seconds for IDLE agents to try to resume monitoring after
          # a database failure or when starting in IDLE mode. Set to 0 for agents
          # to not try to resume (in which case the 'efm resume <cluster>' command
          # is used after bringing a database up).
          auto.resume.period={{ cleaned_auto_resume_period }}
          
          # These properties specify the IP and prefix length that will be remapped during
          # failover. If you do not use a VIP as part of your failover solution, leave
          # the virtual.ip property blank to disable Failover Manager support for VIP processing
          # (assigning, releasing, testing reachability, etc).
          #
          # If you specify a VIP, the interface and prefix are required.
          #
          # If you specify a host name, it will be resolved to an IP address when acquiring or
          # releasing the VIP. If the host name resolves to more than one IP address,
          # there is no way to predict which address Failover Manager will use.
          #
          # By default, the virtual.ip and virtual.ip.prefix values must be the same
          # across all agents. If you set virtual.ip.single to false, you can specify unique values
          # for virtual.ip and virtual.ip.prefix on each node.
          #
          # If you are using an IPv4 address, the virtual.ip.interface value
          # should not contain a secondary virtual ip id (do not include ":1", etc).
          virtual.ip={{ cleaned_virtual_ip }}
          virtual.ip.interface={{ cleaned_virtual_ip_interface }}
          virtual.ip.prefix={{ cleaned_virtual_ip_prefix }}
          virtual.ip.single={{ cleaned_virtual_ip_single }}
          
          # Whether to check if the VIP (when used) is still in use before promoting after
          # a primary failure. Turning this off may allow the new primary to have the VIP
          # even though another node is also broadcasting it. This should only be used
          # in environments where it is known that the failed primary node will be isolated
          # or shut down through other means.
          check.vip.before.promotion=true
          
          
          # A boolean property to enable Failover Manager managed pgpool HA.
          #
          # If enabled, Failover Manager would natively update the joining and leaving status
          # of database nodes to active pgpool instance.
          # Failover manager expects properly configured and running pgpool instances on
          # required nodes. It does not manage setup and configuration of pgpool on any node.
          #
          # By default the property is disabled.
          pgpool.enable=false
          
          # Configurations required for pgpool integration.
          #
          # 'pcp.user' - User that would be invoking PCP commands
          # 'pcp.host' - Virtual IP that would be used by pgpool. Same as pgpool parameter 'delegate_IP'
          # 'pcp.port' - The port on which pgpool listens for pcp commands.
          # 'pcp.pass.file' - Absolute path of PCPPASSFILE.
          # 'pgpool.bin' - Absolute path of pgpool bin directory
          #
          # These properties are required if 'pgpool.enable' is set to true.
          pcp.user=
          pcp.host=
          pcp.port=
          pcp.pass.file=
          pgpool.bin=
          
          
          # Absolute path to load balancer scripts
          #
          # The attach script is called when a node should be attached to the load
          # balancer, for example after a promotion. The detach script is called
          # when a node should be removed, for example when a database has failed
          # or is about to be stopped. Use %h to represent the IP/hostname
          # of the node that is being attached/detached. Use %t to represent the
          # type of node being attached or detached: the letter p will be passed
          # in for primary nodes and the letter s for standby nodes.
          #
          # Example:
          # script.load.balancer.attach=/somepath/attachscript %h %t
          script.load.balancer.attach=
          script.load.balancer.detach=
          
          # If set to true, Failover Manager will detach the node from load balancer if the primary
          # agent fails but the database is still reachable. In most scenarios this is NOT the desired situation.
          # In scenarios where the detach script should run with a failed primary agent, even when the primary
          # database is still healthy this parameter should be set to true.
          #
          # If no value specified it defaults to true (for backwards compatibility). This is not applicable for standbys.
          detach.on.agent.failure=
          
          # Absolute path to fencing script run during promotion
          #
          # This is an optional user-supplied script that will be run during
          # failover on the standby database node.  If left blank, no action will
          # be taken.  If specified, EFM will execute this script before promoting
          # the standby.
          #
          # Parameters can be passed into this script for the failed primary and
          # new primary node addresses. Use %p for new primary and %f for failed
          # primary. On a node that has just been promoted, %p should be the same
          # as the node's efm binding address.
          #
          # Example:
          # script.fence=/somepath/myscript %p %f
          #
          # NOTE: FAILOVER WILL NOT OCCUR IF THIS SCRIPT RETURNS A NON-ZERO EXIT CODE.
          script.fence=
          
          # Absolute path to fencing script run after promotion
          #
          # This is an optional user-supplied script that will be run after
          # failover on the standby node after it has been promoted and
          # is no longer in recovery. The exit code from this script has
          # no effect on Failover Manager, but will be included in a notification
          # sent after the script executes.
          #
          # Parameters can be passed into this script for the failed primary and
          # new primary node addresses. Use %p for new primary and %f for failed
          # primary. On a node that has just been promoted, %p should be the same
          # as the node's efm binding address.
          #
          # Example:
          # script.post.promotion=/somepath/myscript %f %p
          script.post.promotion=
          
          # Absolute path to resume script
          #
          # This script is run before an IDLE agent resumes
          # monitoring its local database.
          script.resumed=
          
          # Absolute path to script run after database failure
          #
          # This is an optional user-supplied script that will be run after
          # an agent detects that its local database has failed.
          script.db.failure=
          
          # Absolute path to script run on isolated primary
          #
          # This is an optional user-supplied script that will be run after
          # a primary agent detects that it has been isolated from the majority
          # of the efm cluster.
          script.primary.isolated=
          
          # Absolute path to script invoked on non-promoting agent nodes
          # before a promotion.
          #
          # This optional user-supplied script will be invoked on other agents
          # when a node is about to promote its database. The exit code from this script has
          # no effect on Failover Manager, but will be included in a notification
          # sent after the script executes.
          #
          # Pass a parameter (%p) with the script to identify the new primary node address.
          #
          # Example:
          # script.remote.pre.promotion=/path_name/script_name %p
          script.remote.pre.promotion=
          
          # Absolute path to script invoked on non-primary agent nodes
          # after a promotion.
          #
          # This optional user-supplied script will be invoked on nodes
          # (except the new primary) after a promotion occurs. The exit code from this script has
          # no effect on Failover Manager, but will be included in a notification
          # sent after the script executes.
          #
          # Pass a parameter (%p) with the script to identify the new primary node address.
          #
          # Example:
          # script.remote.post.promotion=/path_name/script_name %p
          script.remote.post.promotion=
          
          # Absolute path to a custom monitoring script.
          #
          # Use script.custom.monitor to specify the location and name of an optional
          # user-supplied script that will be invoked periodically to perform custom
          # monitoring tasks. A non-zero exit value means that a check has failed;
          # this will be treated as a database failure.  On a primary node, script
          # failure will cause a promotion.  On a standby node script failure will
          # generate a notification and the agent will become IDLE.
          #
          # The custom.monitor.* properties are required if a custom monitoring script
          # is specified:
          #
          # custom.monitor.interval is the time in seconds between executions of the script.
          #
          # custom.monitor.timeout is a timeout value in seconds for how long the script
          # will be allowed to run.  If script execution exceeds the specified time, the
          # task will be stopped and a notification sent. Subsequent runs will continue.
          #
          # If custom.monitor.safe.mode is set to true, non-zero exit codes from the
          # script will be reported but will not cause a promotion or be treated as a
          # database failure. This allows testing of the script without affecting EFM.
          #
          script.custom.monitor=
          custom.monitor.interval=
          custom.monitor.timeout=
          custom.monitor.safe.mode=
          
          # Command to use in place of 'sudo' if desired when efm runs
          # the efm_db_functions, efm_root_functions, or efm_address scripts.
          # Sudo is used in the following ways by efm:
          #
          # sudo /usr/edb/efm-<version>/bin/efm_address <arguments>
          # sudo /usr/edb/efm-<version>/bin/efm_root_functions <arguments>
          # sudo -u <db service owner> /usr/edb/efm-<version>/bin/efm_db_functions <arguments>
          #
          # 'sudo' in the first two examples will be replaced by the value of the sudo.command
          # property. 'sudo -u <db service owner>' will be replaced by the value of the
          # sudo.user.command property. The '%u' field will be replaced with the db owner.
          sudo.command=sudo
          sudo.user.command=sudo -u %u
          
          # Specify the directory of lock file on the node. Failover Manager creates a
          # file named <cluster>.lock at this location to avoid starting multiple agents
          # for same cluster. If the path does not exist, Failover Manager will attempt
          # to create it. If not specified defaults to '/var/lock/efm-<version>'
          lock.dir=
          
          # Specify the directory to create the pid file on the node. If this is changed
          # from the default location, the unit file (if used) should be changed for
          # the service to match. If not specified defaults to '/var/run/efm-<version>'
          pid.dir=
          
          # Specify the directory of agent logs on the node. If the path does not exist,
          # Failover Manager will attempt to create it. If not specified defaults to
          # '/var/log/efm-<version>'. (To store Failover Manager
          # startup logs in a custom location, modify the path in the service script
          # to point to an existing, writable directory.)
          # If using a custom log directory, you must configure logrotate separately.
          # Use 'man logrotate' for more information.
          log.dir=
          
          # Syslog information. The syslog service must be listening on the port
          # for the given protocol, which can be UDP or TCP. The facilities supported
          # are LOCAL0 through LOCAL7.
          syslog.host=localhost
          syslog.port=514
          syslog.protocol=UDP
          syslog.facility=LOCAL1
          
          # Which logging is enabled.
          file.log.enabled=true
          syslog.enabled=false
          
          # Logging levels for JGroups and EFM.
          # Valid values are: TRACE, DEBUG, INFO, WARN, ERROR
          # Default value: INFO
          # It is not necessary to increase these values unless debugging a specific
          # issue. If nodes are not discovering each other at startup, increasing
          # the jgroups level to DEBUG will show information about the TCP connection
          # attempts that may help diagnose the connection failures.
          # TRACE level logging should be used for diagnosing problems only.
          # It is not supported for production use.
          jgroups.loglevel=INFO
          efm.loglevel={{ cleaned_efm_loglevel }}
          
          # Extra information that will be passed to the JVM when starting the agent.
          jvm.options=-Xmx128m
        marker: ""

    - name: Create New PostgreSQL Service
      file: 
        path: /usr/lib/systemd/system/{{ cleaned_postgresql_service }}
        owner: root
        group: root
        mode: 0644
        state: touch
    
    - name: Delete all existing lines in the service file
      lineinfile:
        path: /usr/lib/systemd/system/{{ cleaned_postgresql_service }}
        regexp: '.*'
        state: absent
          
    - name: Insert New PostgreSQL Service
      blockinfile: 
        path: /usr/lib/systemd/system/{{ cleaned_postgresql_service }}
        owner: root
        group: root
        mode: 0644
        insertafter: EOF
        block: |
          # It's not recommended to modify this file in-place, because it will be
          # overwritten during package upgrades.  It is recommended to use systemd
          # "dropin" feature;  i.e. create file with suffix .conf under
          # /etc/systemd/system/postgresql-15.service.d directory overriding the
          # unit's defaults. You can also use "systemctl edit postgresql-15"
          # Look at systemd.unit(5) manual page for more info.
          
          # Note: changing PGDATA will typically require adjusting SELinux
          # configuration as well.
          
          # Note: do not use a PGDATA pathname containing spaces, or you will
          # break postgresql-15-setup.
          [Unit]
          Description=PostgreSQL 15 database server
          Documentation=https://www.postgresql.org/docs/15/static/
          After=syslog.target
          After=network-online.target
          
          [Service]
          Type=notify
          
          User=postgres
          Group=postgres
          
          # Note: avoid inserting whitespace in these Environment= lines, or you may
          # break postgresql-setup.
          
          # Location of database directory
          Environment=PGDATA={{ cleaned_db_data_dir }}
          
          # Where to send early-startup messages from the server (before the logging
          # options of postgresql.conf take effect)
          # This is normally controlled by the global default set by systemd
          # StandardOutput=syslog
          
          # Disable OOM kill on the postmaster
          OOMScoreAdjust=-1000
          Environment=PG_OOM_ADJUST_FILE=/proc/self/oom_score_adj
          Environment=PG_OOM_ADJUST_VALUE=0
          
          ExecStartPre=/usr/pgsql-15/bin/postgresql-15-check-db-dir ${PGDATA}
          ExecStart=/usr/pgsql-15/bin/postmaster -D ${PGDATA}
          ExecReload=/bin/kill -HUP $MAINPID
          KillMode=mixed
          KillSignal=SIGINT
          
          # Do not set any timeout value, so that systemd will not kill postmaster
          # during crash recovery.
          TimeoutSec=0
          
          # 0 is the same as infinity, but "infinity" needs systemd 229
          TimeoutStartSec=0
          
          TimeoutStopSec=1h
          
          [Install]
          WantedBy=multi-user.target
        marker: ""

    - name: Create New EFM Service
      file: 
        path: /usr/lib/systemd/system/{{ cleaned_efm_service }}
        owner: root
        group: root
        mode: 0644
        state: touch
    
    - name: Delete all existing lines in the service file
      lineinfile:
        path: /usr/lib/systemd/system/{{ cleaned_efm_service }}
        regexp: '.*'
        state: absent

    - name: Insert New EFM Service
      blockinfile: 
        path: /usr/lib/systemd/system/{{ cleaned_efm_service }}
        owner: root
        group: root
        mode: 0644
        insertafter: EOF
        block: |
          # Copyright EnterpriseDB Corporation, 2015-2024. All Rights Reserved.
          #
          # You should not modify the unit file in-place, because the file may be
          # overwritten during package upgrades. See the Failover Manager documentation
          # for more information.
          
          [Unit]
          Description=EnterpriseDB Failover Manager 4.9
          Wants=network-online.target
          After=network.target network-online.target
          
          [Service]
          Type=forking
          TimeoutSec=120
          Environment=CLUSTER={{ cleaned_efm_cluster }}
          User=efm
          PIDFile=/var/run/efm-4.9/{{ cleaned_efm_cluster }}.pid
          SuccessExitStatus=143
          
          ExecStart=/bin/bash -c "/usr/edb/efm-4.9/bin/runefm.sh start ${CLUSTER}"
          ExecStop=/bin/bash -c "/usr/edb/efm-4.9/bin/runefm.sh stop ${CLUSTER}"
          
          KillMode=process
          
          [Install]
          WantedBy=multi-user.target
        marker: ""
    
    - name: Create New Postgresql Config
      file: 
        path: "{{ cleaned_db_data_dir }}/{{ cleaned_postgresql_config }}"
        owner: postgres
        group: postgres
        mode: 0600
        state: touch
    
    - name: Delete all existing lines in the service file
      lineinfile:
        path: "{{ cleaned_db_data_dir }}/{{ cleaned_postgresql_config }}"
        regexp: '.*'
        state: absent
          
    - name: Create New Postgresql Config
      blockinfile: 
        path: "{{ cleaned_db_data_dir }}/{{ cleaned_postgresql_config }}"
        owner: postgres
        group: postgres
        mode: 0600
        insertafter: EOF
        block: |
          # -----------------------------
          # PostgreSQL configuration file
          # -----------------------------
          #
          # This file consists of lines of the form:
          #
          #   name = value
          #
          # (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
          # "#" anywhere on a line.  The complete list of parameter names and allowed
          # values can be found in the PostgreSQL documentation.
          #
          # The commented-out settings shown in this file represent the default values.
          # Re-commenting a setting is NOT sufficient to revert it to the default value;
          # you need to reload the server.
          #
          # This file is read on server startup and when the server receives a SIGHUP
          # signal.  If you edit the file on a running system, you have to SIGHUP the
          # server for the changes to take effect, run "pg_ctl reload", or execute
          # "SELECT pg_reload_conf()".  Some parameters, which are marked below,
          # require a server shutdown and restart to take effect.
          #
          # Any parameter can also be given as a command-line option to the server, e.g.,
          # "postgres -c log_connections=on".  Some parameters can be changed at run time
          # with the "SET" SQL command.
          #
          # Memory units:  B  = bytes            Time units:  us  = microseconds
          #                kB = kilobytes                     ms  = milliseconds
          #                MB = megabytes                     s   = seconds
          #                GB = gigabytes                     min = minutes
          #                TB = terabytes                     h   = hours
          #                                                   d   = days
          
          
          #------------------------------------------------------------------------------
          # FILE LOCATIONS
          #------------------------------------------------------------------------------
          
          # The default values of these variables are driven from the -D command-line
          # option or PGDATA environment variable, represented here as ConfigDir.
          
          #data_directory = 'ConfigDir'           # use data in another directory
                                                  # (change requires restart)
          hba_file = '{{ cleaned_db_data_dir }}/pg_hba.conf'     # host-based authentication file
                                                  # (change requires restart)
          ident_file = '{{ cleaned_db_data_dir }}/pg_ident.conf' # ident configuration file
                                                  # (change requires restart)
          
          # If external_pid_file is not explicitly set, no extra PID file is written.
          #external_pid_file = ''                 # write an extra PID file
                                                  # (change requires restart)
          
          
          #------------------------------------------------------------------------------
          # CONNECTIONS AND AUTHENTICATION
          #------------------------------------------------------------------------------
          
          # - Connection Settings -
          
          listen_addresses = '*'         # what IP address(es) to listen on;
                                                  # comma-separated list of addresses;
                                                  # defaults to 'localhost'; use '*' for all
                                                  # (change requires restart)
          port = {{ cleaned_db_port }}                            # (change requires restart)
          max_connections = {{ cleaned_max_connections }}                  # (change requires restart)
          #superuser_reserved_connections = 3     # (change requires restart)
          #unix_socket_directories = '/run/postgresql, /tmp'      # comma-separated list of directories
                                                  # (change requires restart)
          #unix_socket_group = ''                 # (change requires restart)
          #unix_socket_permissions = 0777         # begin with 0 to use octal notation
                                                  # (change requires restart)
          #bonjour = off                          # advertise server via Bonjour
                                                  # (change requires restart)
          #bonjour_name = ''                      # defaults to the computer name
                                                  # (change requires restart)
          
          # - TCP settings -
          # see "man tcp" for details
          
          #tcp_keepalives_idle = 0                # TCP_KEEPIDLE, in seconds;
                                                  # 0 selects the system default
          #tcp_keepalives_interval = 0            # TCP_KEEPINTVL, in seconds;
                                                  # 0 selects the system default
          #tcp_keepalives_count = 0               # TCP_KEEPCNT;
                                                  # 0 selects the system default
          #tcp_user_timeout = 0                   # TCP_USER_TIMEOUT, in milliseconds;
                                                  # 0 selects the system default
          
          #client_connection_check_interval = 0   # time between checks for client
                                                  # disconnection while running queries;
                                                  # 0 for never
          
          # - Authentication -
          
          #authentication_timeout = 1min          # 1s-600s
          password_encryption = '{{ cleaned_password_encryption }}'    # scram-sha-256 or md5
          #db_user_namespace = off
          
          # GSSAPI using Kerberos
          #krb_server_keyfile = 'FILE:${sysconfdir}/krb5.keytab'
          #krb_caseins_users = off
          
          # - SSL -
          
          #ssl = off
          #ssl_ca_file = ''
          #ssl_cert_file = 'server.crt'
          #ssl_crl_file = ''
          #ssl_crl_dir = ''
          #ssl_key_file = 'server.key'
          #ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
          #ssl_prefer_server_ciphers = on
          #ssl_ecdh_curve = 'prime256v1'
          #ssl_min_protocol_version = 'TLSv1.2'
          #ssl_max_protocol_version = ''
          #ssl_dh_params_file = ''
          #ssl_passphrase_command = ''
          #ssl_passphrase_command_supports_reload = off
          
          
          #------------------------------------------------------------------------------
          # RESOURCE USAGE (except WAL)
          #------------------------------------------------------------------------------
          
          # - Memory -
          
          shared_buffers = '{{ cleaned_shared_buffers }}'                  # min 128kB
                                                  # (change requires restart)
          huge_pages = '{{ cleaned_huge_pages }}'                       # on, off, or try
                                                  # (change requires restart)
          #huge_page_size = 0                     # zero for system default
                                                  # (change requires restart)
          #temp_buffers = 8MB                     # min 800kB
          max_prepared_transactions = '{{ cleaned_max_prepared_transactions }}'          # zero disables the feature
                                                  # (change requires restart)
          # Caution: it is not advisable to set max_prepared_transactions nonzero unless
          # you actively intend to use prepared transactions.
          work_mem = '{{ cleaned_work_mem }}'                         # min 64kB
          #hash_mem_multiplier = 2.0              # 1-1000.0 multiplier on hash table work_mem
          maintenance_work_mem = '{{ cleaned_maintenance_work_mem }}'            # min 1MB
          #autovacuum_work_mem = -1               # min 1MB, or -1 to use maintenance_work_mem
          #logical_decoding_work_mem = 64MB       # min 64kB
          #max_stack_depth = 2MB                  # min 100kB
          #shared_memory_type = mmap              # the default is the first option
                                                  # supported by the operating system:
                                                  #   mmap
                                                  #   sysv
                                                  #   windows
                                                  # (change requires restart)
          dynamic_shared_memory_type = posix      # the default is usually the first option
                                                  # supported by the operating system:
                                                  #   posix
                                                  #   sysv
                                                  #   windows
                                                  #   mmap
                                                  # (change requires restart)
          #min_dynamic_shared_memory = 0MB        # (change requires restart)
          
          # - Disk -
          
          #temp_file_limit = -1                   # limits per-process temp file space
                                                  # in kilobytes, or -1 for no limit
          
          # - Kernel Resources -
          
          #max_files_per_process = 1000           # min 64
                                                  # (change requires restart)
          
          # - Cost-Based Vacuum Delay -
          
          #vacuum_cost_delay = 0                  # 0-100 milliseconds (0 disables)
          #vacuum_cost_page_hit = 1               # 0-10000 credits
          #vacuum_cost_page_miss = 2              # 0-10000 credits
          #vacuum_cost_page_dirty = 20            # 0-10000 credits
          #vacuum_cost_limit = 200                # 1-10000 credits
          
          # - Background Writer -
          
          #bgwriter_delay = 200ms                 # 10-10000ms between rounds
          #bgwriter_lru_maxpages = 100            # max buffers written/round, 0 disables
          #bgwriter_lru_multiplier = 2.0          # 0-10.0 multiplier on buffers scanned/round
          #bgwriter_flush_after = 512kB           # measured in pages, 0 disables
          
          # - Asynchronous Behavior -
          
          #backend_flush_after = 0                # measured in pages, 0 disables
          effective_io_concurrency = '{{ cleaned_effective_io_concurrency }}'           # 1-1000; 0 disables prefetching
          #maintenance_io_concurrency = 10        # 1-1000; 0 disables prefetching
          max_worker_processes = '{{ cleaned_max_worker_processes }}'               # (change requires restart)
          max_parallel_workers_per_gather = '{{ cleaned_max_parallel_workers_per_gather }}'    # limited by max_parallel_workers
          max_parallel_maintenance_workers = '{{ cleaned_max_parallel_maintenance_workers }}'   # limited by max_parallel_workers
          max_parallel_workers = '{{ cleaned_max_parallel_workers }}'               # number of max_worker_processes that
                                                  # can be used in parallel operations
          #parallel_leader_participation = on
          #old_snapshot_threshold = -1            # 1min-60d; -1 disables; 0 is immediate
                                                  # (change requires restart)
          
          
          #------------------------------------------------------------------------------
          # WRITE-AHEAD LOG
          #------------------------------------------------------------------------------
          
          # - Settings -
          
          wal_level = '{{ cleaned_wal_level }}'                    # minimal, replica, or logical
                                                  # (change requires restart)
          #fsync = on                             # flush data to disk for crash safety
                                                  # (turning this off can cause
                                                  # unrecoverable data corruption)
          #synchronous_commit = on                # synchronization level;
                                                  # off, local, remote_write, remote_apply, or on
          #wal_sync_method = fsync                # the default is the first option
                                                  # supported by the operating system:
                                                  #   open_datasync
                                                  #   fdatasync (default on Linux and FreeBSD)
                                                  #   fsync
                                                  #   fsync_writethrough
                                                  #   open_sync
          #full_page_writes = on                  # recover from partial page writes
          wal_log_hints = '{{ cleaned_wal_log_hints }}'                    # also do full page writes of non-critical updates
                                                  # (change requires restart)
          #wal_compression = off                  # enables compression of full-page writes;
                                                  # off, pglz, lz4, zstd, or on
          #wal_init_zero = on                     # zero-fill new WAL files
          #wal_recycle = on                       # recycle WAL files
          wal_buffers = '{{ cleaned_wal_buffers }}'                       # min 32kB, -1 sets based on shared_buffers
                                                  # (change requires restart)
          #wal_writer_delay = 200ms               # 1-10000 milliseconds
          #wal_writer_flush_after = 1MB           # measured in pages, 0 disables
          #wal_skip_threshold = 2MB
          
          #commit_delay = 0                       # range 0-100000, in microseconds
          #commit_siblings = 5                    # range 1-1000
          
          # - Checkpoints -
          
          #checkpoint_timeout = 5min              # range 30s-1d
          checkpoint_completion_target = '{{ cleaned_checkpoint_completion_target }}'     # checkpoint target duration, 0.0 - 1.0
          #checkpoint_flush_after = 256kB         # measured in pages, 0 disables
          #checkpoint_warning = 30s               # 0 disables
          max_wal_size = '{{ cleaned_max_wal_size }}'
          min_wal_size = '{{ cleaned_min_wal_size }}'
          
          # - Prefetching during recovery -
          
          #recovery_prefetch = try                # prefetch pages referenced in the WAL?
          #wal_decode_buffer_size = 512kB         # lookahead window used for prefetching
                                                  # (change requires restart)
          
          # - Archiving -
          
          archive_mode = '{{ cleaned_archive_mode }}'             # enables archiving; off, on, or always
                                          # (change requires restart)
          #archive_library = ''           # library to use to archive a logfile segment
                                          # (empty string indicates archive_command should
                                          # be used)
          archive_command = '{{ cleaned_archive_command }}'           # command to use to archive a logfile segment
                                          # placeholders: %p = path of file to archive
                                          #               %f = file name only
                                          # e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
          #archive_timeout = 0            # force a logfile segment switch after this
                                          # number of seconds; 0 disables
          
          # - Archive Recovery -
          
          # These are only used in recovery mode.
          
          restore_command = '{{ cleaned_restore_command }}'           # command to use to restore an archived logfile segment
                                          # placeholders: %p = path of file to restore
                                          #               %f = file name only
                                          # e.g. 'cp /mnt/server/archivedir/%f %p'
          #archive_cleanup_command = ''   # command to execute at every restartpoint
          #recovery_end_command = ''      # command to execute at completion of recovery
          
          # - Recovery Target -
          
          # Set these only when performing a targeted recovery.
          
          #recovery_target = ''           # 'immediate' to end recovery as soon as a
                                          # consistent state is reached
                                          # (change requires restart)
          #recovery_target_name = ''      # the named restore point to which recovery will proceed
                                          # (change requires restart)
          #recovery_target_time = ''      # the time stamp up to which recovery will proceed
                                          # (change requires restart)
          #recovery_target_xid = ''       # the transaction ID up to which recovery will proceed
                                          # (change requires restart)
          #recovery_target_lsn = ''       # the WAL LSN up to which recovery will proceed
                                          # (change requires restart)
          #recovery_target_inclusive = on # Specifies whether to stop:
                                          # just after the specified recovery target (on)
                                          # just before the recovery target (off)
                                          # (change requires restart)
          #recovery_target_timeline = 'latest'    # 'current', 'latest', or timeline ID
                                          # (change requires restart)
          #recovery_target_action = 'pause'       # 'pause', 'promote', 'shutdown'
                                          # (change requires restart)
          
          
          #------------------------------------------------------------------------------
          # REPLICATION
          #------------------------------------------------------------------------------
          
          # - Sending Servers -
          
          # Set these on the primary and on any standby that will send replication data.
          
          max_wal_senders = '{{ cleaned_max_wal_senders }}'           # max number of walsender processes
                                          # (change requires restart)
          max_replication_slots = '{{ cleaned_max_replication_slots }}'     # max number of replication slots
                                          # (change requires restart)
          wal_keep_size = '{{ cleaned_wal_keep_size }}'              # in megabytes; 0 disables
          #max_slot_wal_keep_size = -1    # in megabytes; -1 disables
          #wal_sender_timeout = 60s       # in milliseconds; 0 disables
          track_commit_timestamp = '{{ cleaned_track_commit_timestamp }}'   # collect timestamp of transaction commit
                                          # (change requires restart)
          
          # - Primary Server -
          
          # These settings are ignored on a standby server.
          
          #synchronous_standby_names = '' # standby servers that provide sync rep
                                          # method to choose sync standbys, number of sync standbys,
                                          # and comma-separated list of application_name
                                          # from standby(s); '*' = all
          #vacuum_defer_cleanup_age = 0   # number of xacts by which cleanup is delayed
          
          # - Standby Servers -
          
          # These settings are ignored on a primary server.
          
          primary_conninfo = '{{ cleaned_primary_conninfo }}'                  # connection string to sending server
          #primary_slot_name = '{{ cleaned_primary_slot_name }}'                 # replication slot on sending server
          #promote_trigger_file = ''              # file name whose presence ends recovery
          hot_standby = '{{ cleaned_hot_standby }}'                       # "off" disallows queries during recovery
                                                  # (change requires restart)
          #max_standby_archive_delay = 30s        # max delay before canceling queries
                                                  # when reading WAL from archive;
                                                  # -1 allows indefinite delay
          #max_standby_streaming_delay = 30s      # max delay before canceling queries
                                                  # when reading streaming WAL;
                                                  # -1 allows indefinite delay
          #wal_receiver_create_temp_slot = off    # create temp slot if primary_slot_name
                                                  # is not set
          #wal_receiver_status_interval = 10s     # send replies at least this often
                                                  # 0 disables
          #hot_standby_feedback = off             # send info from standby to prevent
                                                  # query conflicts
          #wal_receiver_timeout = 60s             # time that receiver waits for
                                                  # communication from primary
                                                  # in milliseconds; 0 disables
          #wal_retrieve_retry_interval = 5s       # time to wait before retrying to
                                                  # retrieve WAL after a failed attempt
          #recovery_min_apply_delay = 0           # minimum delay for applying changes during recovery
          
          # - Subscribers -
          
          # These settings are ignored on a publisher.
          
          #max_logical_replication_workers = 4    # taken from max_worker_processes
                                                  # (change requires restart)
          #max_sync_workers_per_subscription = 2  # taken from max_logical_replication_workers
          
          
          #------------------------------------------------------------------------------
          # QUERY TUNING
          #------------------------------------------------------------------------------
          
          # - Planner Method Configuration -
          
          #enable_async_append = on
          #enable_bitmapscan = on
          #enable_gathermerge = on
          #enable_hashagg = on
          #enable_hashjoin = on
          #enable_incremental_sort = on
          #enable_indexscan = on
          #enable_indexonlyscan = on
          #enable_material = on
          #enable_memoize = on
          #enable_mergejoin = on
          #enable_nestloop = on
          #enable_parallel_append = on
          #enable_parallel_hash = on
          #enable_partition_pruning = on
          #enable_partitionwise_join = off
          #enable_partitionwise_aggregate = off
          #enable_seqscan = on
          #enable_sort = on
          #enable_tidscan = on
          
          # - Planner Cost Constants -
          
          #seq_page_cost = 1.0                    # measured on an arbitrary scale
          random_page_cost = '{{ cleaned_random_page_cost }}'                 # same scale as above
          #cpu_tuple_cost = 0.01                  # same scale as above
          #cpu_index_tuple_cost = 0.005           # same scale as above
          #cpu_operator_cost = 0.0025             # same scale as above
          #parallel_setup_cost = 1000.0   # same scale as above
          #parallel_tuple_cost = 0.1              # same scale as above
          #min_parallel_table_scan_size = 8MB
          #min_parallel_index_scan_size = 512kB
          effective_cache_size = '{{ cleaned_effective_cache_size }}'
          
          #jit_above_cost = 100000                # perform JIT compilation if available
                                                  # and query more expensive than this;
                                                  # -1 disables
          #jit_inline_above_cost = 500000         # inline small functions if query is
                                                  # more expensive than this; -1 disables
          #jit_optimize_above_cost = 500000       # use expensive JIT optimizations if
                                                  # query is more expensive than this;
                                                  # -1 disables
          
          # - Genetic Query Optimizer -
          
          #geqo = on
          #geqo_threshold = 12
          #geqo_effort = 5                        # range 1-10
          #geqo_pool_size = 0                     # selects default based on effort
          #geqo_generations = 0                   # selects default based on effort
          #geqo_selection_bias = 2.0              # range 1.5-2.0
          #geqo_seed = 0.0                        # range 0.0-1.0
          
          # - Other Planner Options -
          
          default_statistics_target = '{{ cleaned_default_statistics_target }}'        # range 1-10000
          #constraint_exclusion = partition       # on, off, or partition
          #cursor_tuple_fraction = 0.1            # range 0.0-1.0
          #from_collapse_limit = 8
          #jit = on                               # allow JIT compilation
          #join_collapse_limit = 8                # 1 disables collapsing of explicit
                                                  # JOIN clauses
          #plan_cache_mode = auto                 # auto, force_generic_plan or
                                                  # force_custom_plan
          #recursive_worktable_factor = 10.0      # range 0.001-1000000
          
          
          #------------------------------------------------------------------------------
          # REPORTING AND LOGGING
          #------------------------------------------------------------------------------
          
          # - Where to Log -
          
          log_destination = 'stderr'              # Valid values are combinations of
                                                  # stderr, csvlog, jsonlog, syslog, and
                                                  # eventlog, depending on platform.
                                                  # csvlog and jsonlog require
                                                  # logging_collector to be on.
          
          # This is used when logging to stderr:
          logging_collector = on                  # Enable capturing of stderr, jsonlog,
                                                  # and csvlog into log files. Required
                                                  # to be on for csvlogs and jsonlogs.
                                                  # (change requires restart)
          
          # These are only used if logging_collector is on:
          log_directory = 'log'                   # directory where log files are written,
                                                  # can be absolute or relative to PGDATA
          log_filename = 'postgresql-%a.log'      # log file name pattern,
                                                  # can include strftime() escapes
          #log_file_mode = 0600                   # creation mode for log files,
                                                  # begin with 0 to use octal notation
          log_rotation_age = 1d                   # Automatic rotation of logfiles will
                                                  # happen after that time.  0 disables.
          log_rotation_size = 0                   # Automatic rotation of logfiles will
                                                  # happen after that much log output.
                                                  # 0 disables.
          log_truncate_on_rotation = on           # If on, an existing log file with the
                                                  # same name as the new log file will be
                                                  # truncated rather than appended to.
                                                  # But such truncation only occurs on
                                                  # time-driven rotation, not on restarts
                                                  # or size-driven rotation.  Default is
                                                  # off, meaning append to existing files
                                                  # in all cases.
          
          # These are relevant when logging to syslog:
          #syslog_facility = 'LOCAL0'
          #syslog_ident = 'postgres'
          #syslog_sequence_numbers = on
          #syslog_split_messages = on
          
          # This is only relevant when logging to eventlog (Windows):
          # (change requires restart)
          #event_source = 'PostgreSQL'
          
          # - When to Log -
          
          #log_min_messages = warning             # values in order of decreasing detail:
                                                  #   debug5
                                                  #   debug4
                                                  #   debug3
                                                  #   debug2
                                                  #   debug1
                                                  #   info
                                                  #   notice
                                                  #   warning
                                                  #   error
                                                  #   log
                                                  #   fatal
                                                  #   panic
          
          #log_min_error_statement = error        # values in order of decreasing detail:
                                                  #   debug5
                                                  #   debug4
                                                  #   debug3
                                                  #   debug2
                                                  #   debug1
                                                  #   info
                                                  #   notice
                                                  #   warning
                                                  #   error
                                                  #   log
                                                  #   fatal
                                                  #   panic (effectively off)
          
          #log_min_duration_statement = -1        # -1 is disabled, 0 logs all statements
                                                  # and their durations, > 0 logs only
                                                  # statements running at least this number
                                                  # of milliseconds
          
          #log_min_duration_sample = -1           # -1 is disabled, 0 logs a sample of statements
                                                  # and their durations, > 0 logs only a sample of
                                                  # statements running at least this number
                                                  # of milliseconds;
                                                  # sample fraction is determined by log_statement_sample_rate
          
          #log_statement_sample_rate = 1.0        # fraction of logged statements exceeding
                                                  # log_min_duration_sample to be logged;
                                                  # 1.0 logs all such statements, 0.0 never logs
          
          
          #log_transaction_sample_rate = 0.0      # fraction of transactions whose statements
                                                  # are logged regardless of their duration; 1.0 logs all
                                                  # statements from all transactions, 0.0 never logs
          
          #log_startup_progress_interval = 10s    # Time between progress updates for
                                                  # long-running startup operations.
                                                  # 0 disables the feature, > 0 indicates
                                                  # the interval in milliseconds.
          
          # - What to Log -
          
          #debug_print_parse = off
          #debug_print_rewritten = off
          #debug_print_plan = off
          #debug_pretty_print = on
          #log_autovacuum_min_duration = 10min    # log autovacuum activity;
                                                  # -1 disables, 0 logs all actions and
                                                  # their durations, > 0 logs only
                                                  # actions running at least this number
                                                  # of milliseconds.
          #log_checkpoints = on
          #log_connections = off
          #log_disconnections = off
          #log_duration = off
          #log_error_verbosity = default          # terse, default, or verbose messages
          #log_hostname = off
          log_line_prefix = '%m [%p] '            # special values:
                                                  #   %a = application name
                                                  #   %u = user name
                                                  #   %d = database name
                                                  #   %r = remote host and port
                                                  #   %h = remote host
                                                  #   %b = backend type
                                                  #   %p = process ID
                                                  #   %P = process ID of parallel group leader
                                                  #   %t = timestamp without milliseconds
                                                  #   %m = timestamp with milliseconds
                                                  #   %n = timestamp with milliseconds (as a Unix epoch)
                                                  #   %Q = query ID (0 if none or not computed)
                                                  #   %i = command tag
                                                  #   %e = SQL state
                                                  #   %c = session ID
                                                  #   %l = session line number
                                                  #   %s = session start timestamp
                                                  #   %v = virtual transaction ID
                                                  #   %x = transaction ID (0 if none)
                                                  #   %q = stop here in non-session
                                                  #        processes
                                                  #   %% = '%'
                                                  # e.g. '<%u%%%d> '
          #log_lock_waits = off                   # log lock waits >= deadlock_timeout
          #log_recovery_conflict_waits = off      # log standby recovery conflict waits
                                                  # >= deadlock_timeout
          #log_parameter_max_length = -1          # when logging statements, limit logged
                                                  # bind-parameter values to N bytes;
                                                  # -1 means print in full, 0 disables
          #log_parameter_max_length_on_error = 0  # when logging an error, limit logged
                                                  # bind-parameter values to N bytes;
                                                  # -1 means print in full, 0 disables
          #log_statement = 'none'                 # none, ddl, mod, all
          #log_replication_commands = off
          #log_temp_files = -1                    # log temporary files equal or larger
                                                  # than the specified size in kilobytes;
                                                  # -1 disables, 0 logs all temp files
          log_timezone = 'Asia/Kuala_Lumpur'
          
          
          #------------------------------------------------------------------------------
          # PROCESS TITLE
          #------------------------------------------------------------------------------
          
          cluster_name = '{{ cleaned_patroni_cluster_name }}'                      # added to process titles if nonempty
                                                  # (change requires restart)
          #update_process_title = on
          
          
          #------------------------------------------------------------------------------
          # STATISTICS
          #------------------------------------------------------------------------------
          
          # - Cumulative Query and Index Statistics -
          
          #track_activities = on
          track_activity_query_size = '{{ cleaned_track_activity_query_size }}'       # (change requires restart)
          #track_counts = on
          #track_io_timing = off
          #track_wal_io_timing = off
          #track_functions = none                 # none, pl, all
          #stats_fetch_consistency = cache
          
          
          # - Monitoring -
          
          #compute_query_id = auto
          #log_statement_stats = off
          #log_parser_stats = off
          #log_planner_stats = off
          #log_executor_stats = off
          
          
          #------------------------------------------------------------------------------
          # AUTOVACUUM
          #------------------------------------------------------------------------------
          
          #autovacuum = on                        # Enable autovacuum subprocess?  'on'
                                                  # requires track_counts to also be on.
          #autovacuum_max_workers = 3             # max number of autovacuum subprocesses
                                                  # (change requires restart)
          #autovacuum_naptime = 1min              # time between autovacuum runs
          #autovacuum_vacuum_threshold = 50       # min number of row updates before
                                                  # vacuum
          #autovacuum_vacuum_insert_threshold = 1000      # min number of row inserts
                                                  # before vacuum; -1 disables insert
                                                  # vacuums
          #autovacuum_analyze_threshold = 50      # min number of row updates before
                                                  # analyze
          #autovacuum_vacuum_scale_factor = 0.2   # fraction of table size before vacuum
          #autovacuum_vacuum_insert_scale_factor = 0.2    # fraction of inserts over table
                                                  # size before insert vacuum
          #autovacuum_analyze_scale_factor = 0.1  # fraction of table size before analyze
          #autovacuum_freeze_max_age = 200000000  # maximum XID age before forced vacuum
                                                  # (change requires restart)
          #autovacuum_multixact_freeze_max_age = 400000000        # maximum multixact age
                                                  # before forced vacuum
                                                  # (change requires restart)
          #autovacuum_vacuum_cost_delay = 2ms     # default vacuum cost delay for
                                                  # autovacuum, in milliseconds;
                                                  # -1 means use vacuum_cost_delay
          #autovacuum_vacuum_cost_limit = -1      # default vacuum cost limit for
                                                  # autovacuum, -1 means use
                                                  # vacuum_cost_limit
          
          
          #------------------------------------------------------------------------------
          # CLIENT CONNECTION DEFAULTS
          #------------------------------------------------------------------------------
          
          # - Statement Behavior -
          
          #client_min_messages = notice           # values in order of decreasing detail:
                                                  #   debug5
                                                  #   debug4
                                                  #   debug3
                                                  #   debug2
                                                  #   debug1
                                                  #   log
                                                  #   notice
                                                  #   warning
                                                  #   error
          #search_path = '"$user", public'        # schema names
          #row_security = on
          #default_table_access_method = 'heap'
          #default_tablespace = ''                # a tablespace name, '' uses the default
          #default_toast_compression = 'pglz'     # 'pglz' or 'lz4'
          #temp_tablespaces = ''                  # a list of tablespace names, '' uses
                                                  # only default tablespace
          #check_function_bodies = on
          #default_transaction_isolation = 'read committed'
          #default_transaction_read_only = off
          #default_transaction_deferrable = off
          #session_replication_role = 'origin'
          #statement_timeout = 0                  # in milliseconds, 0 is disabled
          #lock_timeout = 0                       # in milliseconds, 0 is disabled
          #idle_in_transaction_session_timeout = 0        # in milliseconds, 0 is disabled
          idle_session_timeout = '{{ cleaned_idle_session_timeout }}'               # in milliseconds, 0 is disabled
          #vacuum_freeze_table_age = 150000000
          #vacuum_freeze_min_age = 50000000
          #vacuum_failsafe_age = 1600000000
          #vacuum_multixact_freeze_table_age = 150000000
          #vacuum_multixact_freeze_min_age = 5000000
          #vacuum_multixact_failsafe_age = 1600000000
          #bytea_output = 'hex'                   # hex, escape
          #xmlbinary = 'base64'
          #xmloption = 'content'
          #gin_pending_list_limit = 4MB
          
          # - Locale and Formatting -
          
          datestyle = 'iso, mdy'
          #intervalstyle = 'postgres'
          timezone = 'Asia/Kuala_Lumpur'
          #timezone_abbreviations = 'Default'     # Select the set of available time zone
                                                  # abbreviations.  Currently, there are
                                                  #   Default
                                                  #   Australia (historical usage)
                                                  #   India
                                                  # You can create your own file in
                                                  # share/timezonesets/.
          #extra_float_digits = 1                 # min -15, max 3; any value >0 actually
                                                  # selects precise output mode
          #client_encoding = sql_ascii            # actually, defaults to database
                                                  # encoding
          
          # These settings are initialized by initdb, but they can be changed.
          lc_messages = 'en_US.UTF-8'                     # locale for system error message
                                                  # strings
          lc_monetary = 'en_US.UTF-8'                     # locale for monetary formatting
          lc_numeric = 'en_US.UTF-8'                      # locale for number formatting
          lc_time = 'en_US.UTF-8'                         # locale for time formatting
          
          # default configuration for text search
          default_text_search_config = 'pg_catalog.english'
          
          # - Shared Library Preloading -
          
          #local_preload_libraries = ''
          #session_preload_libraries = ''
          shared_preload_libraries = '{{ cleaned_shared_preload_libraries }}'  # (change requires restart)
          #jit_provider = 'llvmjit'               # JIT library to use
          
          # - Other Defaults -
          
          #dynamic_library_path = '$libdir'
          #gin_fuzzy_search_limit = 0
          
          
          #------------------------------------------------------------------------------
          # LOCK MANAGEMENT
          #------------------------------------------------------------------------------
          
          #deadlock_timeout = 1s
          max_locks_per_transaction = '{{ cleaned_max_locks_per_transaction }}'         # min 10
                                                  # (change requires restart)
          #max_pred_locks_per_transaction = 64    # min 10
                                                  # (change requires restart)
          #max_pred_locks_per_relation = -2       # negative values mean
                                                  # (max_pred_locks_per_transaction
                                                  #  / -max_pred_locks_per_relation) - 1
          #max_pred_locks_per_page = 2            # min 0
          
          
          #------------------------------------------------------------------------------
          # VERSION AND PLATFORM COMPATIBILITY
          #------------------------------------------------------------------------------
          
          # - Previous PostgreSQL Versions -
          
          #array_nulls = on
          #backslash_quote = safe_encoding        # on, off, or safe_encoding
          #escape_string_warning = on
          #lo_compat_privileges = off
          #quote_all_identifiers = off
          #standard_conforming_strings = on
          #synchronize_seqscans = on
          
          # - Other Platforms and Clients -
          
          #transform_null_equals = off
          
          
          #------------------------------------------------------------------------------
          # ERROR HANDLING
          #------------------------------------------------------------------------------
          
          #exit_on_error = off                    # terminate session on any error?
          #restart_after_crash = on               # reinitialize after backend crash?
          #data_sync_retry = off                  # retry or panic on failure to fsync
                                                  # data?
                                                  # (change requires restart)
          #recovery_init_sync_method = fsync      # fsync, syncfs (Linux 5.8+)
          
          
          #------------------------------------------------------------------------------
          # CONFIG FILE INCLUDES
          #------------------------------------------------------------------------------
          
          # These options allow settings to be loaded from files other than the
          # default postgresql.conf.  Note that these are directives, not variable
          # assignments, so they can usefully be given more than once.
          
          #include_dir = '...'                    # include files ending in '.conf' from
                                                  # a directory, e.g., 'conf.d'
          #include_if_exists = '...'              # include file only if it exists
          #include = ''                     # include file
          
          
          #------------------------------------------------------------------------------
          # CUSTOMIZED OPTIONS
          #------------------------------------------------------------------------------
          
          # Add settings for extensions here
          pg_stat_statements.track = 'all'
        marker: ""