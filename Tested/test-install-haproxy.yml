---
- name: Install and Config Patroni
  hosts: all
  gather_facts: true  # Disable gathering facts to speed up the test
  become: yes
  become_user: root

  tasks:
######## OS SETUP ###########

#    - name: Disable PostgreSQL module in DNF configuration
#      command: "dnf -qy module disable postgresql"

#    - name: Disable PostgreSQL module in DNF configuration
#      command: "dnf -qy module disable postgresql"

    - name: Disable PostgreSQL module in DNF configuration
      command: "dnf -qy module disable postgresql"

    - name: Install PostgreSQL Repository
      command: "dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm"

    - name: Install NC Package
      command: "dnf install -y nc"
     #can skip when already installed

    - name: Install Telnet Package
      command: "dnf install -y telnet"
     #can skip when already installed

    - name: Enable RHEL8 Extras Repository
      command: "dnf config-manager --enable pgdg-rhel8-extras"

    - name: Enable Firewalld service
      systemd:
        name: "firewalld.service"
        enabled: yes
        state: started

    - name: Open Port For Patroni, ETCD, and HAProxy
      command: "firewall-cmd --add-port=5432/tcp --add-port=5433/tcp --add-port=9000/tcp --add-port=5434/tcp --add-port=2379/tcp --add-port=2380/tcp --add-port=8008/tcp --permanent"
      #Either open spesific port on specific host or we can open on all host0

#    - name: Open Port
#      command: "firewall-cmd --add-rich-rule='rule protocol value="vrrp" accept' --permanent"
       #how can we add this for Keepalived only
#
    - name: Reload Firewall-cmd service
      command: "firewall-cmd --reload"
      #Either open spesific port on specific host or we can open on all host0

    - name: Enable selinux for haproxy
      command: "setsebool -P haproxy_connect_any=1"
    - name: Enable selinux for haproxy
      raw: ausearch -c haproxy --raw | audit2allow -M my-haproxy
    - name: Enable selinux for haproxy
      raw: "semodule -i my-haproxy.pp"

    - name: Enable selinux for haproxy
      raw: ausearch -c keepalived --raw | audit2allow -M my-keepalived
    - name: Enable selinux for haproxy
      raw: "semodule -i my-keepalived.pp"


    - name: Restart Chronyd service
      systemd:
        name: "chronyd.service"
        enabled: yes
        state: restarted

######## HAPROXY SETUP ###########

    - name: Install HAPROXY
      yum:
        name: haproxy
        state: present
        disable_gpg_check: false

    - name: Copy the default config file
      command: "cp -p /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy.cfg.bak"

    - name: Delete all existing lines in the config file
      lineinfile:
        path: "/etc/haproxy/haproxy.cfg"
        regexp: '.*'
        state: absent

    - name: Ensure lines are present in Haproxy configuration file
      blockinfile:
        path: "/etc/haproxy/haproxy.cfg"
        insertafter: EOF
        block: |
          global
          log         127.0.0.1 local2

          chroot      /var/lib/haproxy
          pidfile     /var/run/haproxy.pid
          user        haproxy
          group       haproxy
          daemon

          stats socket /var/lib/haproxy/stats

          defaults
              mode                    tcp
              log                     global
              retries                 1
              timeout queue           1m
              timeout connect         10s
              timeout client          1m
              timeout server          1m
              timeout check           10s
              maxconn                 350

          listen stats
              mode http
              bind *:9000
              stats enable
              stats uri /

          listen cluster-dev
              bind *:5432
              option httpchk
              http-check expect status 200
              default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
              server pgnode1 192.168.1.21:5432 maxconn 100 check port 8008
              server pgnode2 192.168.1.22:5432 maxconn 100 check port 8008
              server pgnode3 192.168.1.23:5432 maxconn 100 check port 8008
          listen readonly_cluster-dev
              bind *:5433
              option httpchk
              http-check expect status 503
              default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
              server pgnode1 192.168.1.21:5432 maxconn 100 check port 8008
              server pgnode2 192.168.1.22:5432 maxconn 100 check port 8008
              server pgnode3 192.168.1.23:5432 maxconn 100 check port 8008


    - name: Restart HAPROXY service
      systemd:
        name: "haproxy.service"
        enabled: yes
        state: started

######## KEEPALIVED SETUP ###########

    - name: Install Keepalived
      yum:
        name: keepalived
        state: present
        disable_gpg_check: false

    - name: Copy the default config file
      command: "cp -p /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak"

    - name: Delete all existing lines in the config file
      lineinfile:
        path: "/etc/keepalived/keepalived.conf"
        regexp: '.*'
        state: absent

    - name: Ensure lines are present in Keepalived configuration file
      blockinfile:
        path: "/etc/keepalived/keepalived.conf"
        insertafter: EOF
        block: |
          ! Configuration File for keepalived

          global_defs {
             notification_email {
               farhan@gmail.com  (email depends on you)
             }
             notification_email_from dba@gmail.com
             smtp_server 127.0.0.1
             smtp_connect_timeout 30
          }

          vrrp_script haproxy {
              script "/usr/bin/kill -0 haproxy"
              interval 2
              weight 2
              timeout 2
              fall 2
              rise 2
          }

          vrrp_instance VI_1 {
              state MASTER #Haproxy1 will have state MASTER and Haproxy2 will have state STANDBY. It defined by hostname. So, haproxy1 will always have state MASTER. There are only 2 Haproxy node.
              interface enp0s3 #Based on interface name. This interface name will depends on which interface that used to be accessed by apps. We will create virtual IP on this interface. For example, when you check with command ip addr, you can see which interface that use IP that accessed by ansible. In this case, IP 192.168.1.24 is the host IP that accessed by ansible and have interface name "enp0s3". In client side, it will depends on client host configurations.
              virtual_router_id 51
              priority 101
              advert_int 1
              authentication {
                  auth_type PASS
                  auth_pass 1111
              }

              virtual_ipaddress {
                  192.168.1.111 dev enp0s3 #This is depends on Virtual IP that will used by Client.
              }
              track_script {
          	    haproxy
              }
          }



    - name: Restart Keepalived service
      systemd:
        name: "keepalived.service"
        enabled: yes
        state: started